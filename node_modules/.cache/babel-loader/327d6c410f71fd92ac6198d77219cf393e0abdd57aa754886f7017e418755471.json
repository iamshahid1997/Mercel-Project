{"ast":null,"code":"const engagementHelper = {};\nengagementHelper.getChannelsWithMessagesOnMultipleDates = messageCountList => {\n  const channelCountMap = new Map();\n\n  // Count the number of unique dates each channel has messages on\n  for (const entry of messageCountList) {\n    const channelId = entry.channelId;\n    const timeBucket = entry.timeBucket.split('T')[0]; // Extract date part\n    if (channelCountMap.has(channelId)) {\n      channelCountMap.get(channelId).add(timeBucket);\n    } else {\n      channelCountMap.set(channelId, new Set([timeBucket]));\n    }\n  }\n\n  // Filter channels with messages on more than one date\n  const channelsWithMessagesOnMultipleDates = [];\n  for (const [channelId, dateSet] of channelCountMap) {\n    if (dateSet.size > 1) {\n      channelsWithMessagesOnMultipleDates.push(channelId);\n    }\n  }\n  return channelsWithMessagesOnMultipleDates;\n};","map":{"version":3,"names":["engagementHelper","getChannelsWithMessagesOnMultipleDates","messageCountList","channelCountMap","Map","entry","channelId","timeBucket","split","has","get","add","set","Set","channelsWithMessagesOnMultipleDates","dateSet","size","push"],"sources":["/Users/shahidansari/Documents/GitHub/Mercel-Project/src/utils/engagementHelper.js"],"sourcesContent":["const engagementHelper = {};\n\nengagementHelper.getChannelsWithMessagesOnMultipleDates = (messageCountList) => {\n    const channelCountMap = new Map();\n  \n    // Count the number of unique dates each channel has messages on\n    for (const entry of messageCountList) {\n      const channelId = entry.channelId;\n      const timeBucket = entry.timeBucket.split('T')[0]; // Extract date part\n      if (channelCountMap.has(channelId)) {\n        channelCountMap.get(channelId).add(timeBucket);\n      } else {\n        channelCountMap.set(channelId, new Set([timeBucket]));\n      }\n    }\n  \n    // Filter channels with messages on more than one date\n    const channelsWithMessagesOnMultipleDates = [];\n    for (const [channelId, dateSet] of channelCountMap) {\n      if (dateSet.size > 1) {\n        channelsWithMessagesOnMultipleDates.push(channelId);\n      }\n    }\n  \n    return channelsWithMessagesOnMultipleDates;\n}   "],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,CAAC,CAAC;AAE3BA,gBAAgB,CAACC,sCAAsC,GAAIC,gBAAgB,IAAK;EAC5E,MAAMC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;;EAEjC;EACA,KAAK,MAAMC,KAAK,IAAIH,gBAAgB,EAAE;IACpC,MAAMI,SAAS,GAAGD,KAAK,CAACC,SAAS;IACjC,MAAMC,UAAU,GAAGF,KAAK,CAACE,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,IAAIL,eAAe,CAACM,GAAG,CAACH,SAAS,CAAC,EAAE;MAClCH,eAAe,CAACO,GAAG,CAACJ,SAAS,CAAC,CAACK,GAAG,CAACJ,UAAU,CAAC;IAChD,CAAC,MAAM;MACLJ,eAAe,CAACS,GAAG,CAACN,SAAS,EAAE,IAAIO,GAAG,CAAC,CAACN,UAAU,CAAC,CAAC,CAAC;IACvD;EACF;;EAEA;EACA,MAAMO,mCAAmC,GAAG,EAAE;EAC9C,KAAK,MAAM,CAACR,SAAS,EAAES,OAAO,CAAC,IAAIZ,eAAe,EAAE;IAClD,IAAIY,OAAO,CAACC,IAAI,GAAG,CAAC,EAAE;MACpBF,mCAAmC,CAACG,IAAI,CAACX,SAAS,CAAC;IACrD;EACF;EAEA,OAAOQ,mCAAmC;AAC9C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}